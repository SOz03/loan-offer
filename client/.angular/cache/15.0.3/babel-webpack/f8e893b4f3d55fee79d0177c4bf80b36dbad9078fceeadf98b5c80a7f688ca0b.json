{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" Successfully registered! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n    this.form = new FormGroup({\n      login: new FormControl('', [Validators.required, Validators.email]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n  ngOnInit() {}\n  onSubmit(event) {\n    event.preventDefault();\n    const {\n      login,\n      email,\n      password\n    } = this.form.value;\n    this.authService.register({\n      login,\n      email,\n      password\n    }).subscribe({\n      complete: () => {\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    });\n  }\n}\nRegComponent.ɵfac = function RegComponent_Factory(t) {\n  return new (t || RegComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegComponent,\n  selectors: [[\"app-register\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[1, \"col-md-12\"], [1, \"card\", \"card-container\"], [\"id\", \"profile-img\", \"src\", \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\", 1, \"profile-img-card\"], [\"name\", \"form\", \"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"login\"], [\"type\", \"text\", \"name\", \"login\", \"formControlName\", \"login\", \"required\", \"\", \"minlength\", \"5\", \"maxlength\", \"20\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"formControlName\", \"passwrod\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", \"btn-block\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"alert\", \"alert-success\"]],\n  template: function RegComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementStart(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RegComponent_Template_form_ngSubmit_3_listener($event) {\n        return ctx.onSubmit($event);\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"button\", 11);\n      i0.ɵɵtext(18, \"Register\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(19, RegComponent_div_19_Template, 2, 0, \"div\", 12);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSuccessful);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.MaxLengthValidator, i3.EmailValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".col-md-12[_ngcontent-%COMP%] {\\n  align-items: center;\\n  justify-content: center;\\n  display: flex;\\n}\\n\\n.card-container[_ngcontent-%COMP%] {\\n  padding: 30px 30px 10px 30px;\\n  margin-top: 20px;\\n  width: 350px;\\n}\\n\\n.profile-img-card[_ngcontent-%COMP%] {\\n  width: 198px;\\n  align-self: center;\\n  margin-bottom: 20px;\\n}\\n/*# sourceURL=webpack://./src/app/pages/registration/reg.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcmVnaXN0cmF0aW9uL3JlZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSw0QkFBNEI7RUFDNUIsZ0JBQWdCO0VBQ2hCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsbUJBQW1CO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbC1tZC0xMiB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uY2FyZC1jb250YWluZXIge1xuICBwYWRkaW5nOiAzMHB4IDMwcHggMTBweCAzMHB4O1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICB3aWR0aDogMzUwcHg7XG59XG5cbi5wcm9maWxlLWltZy1jYXJkIHtcbiAgd2lkdGg6IDE5OHB4O1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;ICqB/DC,+BAAsD;IACpDA,0CACF;IAAAA,iBAAM;;;ADfV,OAAM,MAAOC,YAAY;EAMvBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAJ/B,iBAAY,GAAG,KAAK;IACpB,mBAAc,GAAG,KAAK;IACtB,iBAAY,GAAG,EAAE;IAGf,IAAI,CAACC,IAAI,GAAG,IAAIN,SAAS,CAAC;MACxBO,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,KAAK,CAAC,CAAC;MACnEA,KAAK,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,KAAK,CAAC,CAAC;MACnEC,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAC5BE,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;EACJ;EAEAC,QAAQ,IAAU;EAElBC,QAAQ,CAACC,KAAY;IACnBA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAM;MAAER,KAAK;MAAEE,KAAK;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACJ,IAAI,CAACU,KAAK;IAElD,IAAI,CAACX,WAAW,CAACY,QAAQ,CAAC;MAAEV,KAAK;MAAEE,KAAK;MAAEC;IAAQ,CAAE,CAAC,CAACQ,SAAS,CAAC;MAC9DC,QAAQ,EAAE,MAAK;QACb,IAAI,CAACC,YAAY,GAAG,IAAI;QACxB,IAAI,CAACC,cAAc,GAAG,KAAK;MAC7B,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACD,KAAK,CAACG,OAAO;QACrC,IAAI,CAACJ,cAAc,GAAG,IAAI;MAC5B;KACD,CAAC;EACJ;;AAlCWlB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTzB5B,8BAAuB;MAEnBA,yBAAmG;MACnGA,+BAAiG;MAA/EA;QAAA,OAAY6B,oBAAgB;MAAA,EAAC;MAC7C7B,8BAAwB;MACHA,qBAAK;MAAAA,iBAAQ;MAChCA,2BACmB;MACrBA,iBAAM;MACNA,8BAAwB;MACHA,sBAAK;MAAAA,iBAAQ;MAChCA,4BAA+F;MACjGA,iBAAM;MACNA,+BAAwB;MACAA,yBAAQ;MAAAA,iBAAQ;MACtCA,6BAAgH;MAClHA,iBAAM;MACNA,+BAAwB;MACoBA,yBAAQ;MAAAA,iBAAS;MAI/DA,gEAEM;MACRA,iBAAM;;;MAtB4CA,eAAkB;MAAlBA,oCAAkB;MAmBhCA,gBAAkB;MAAlBA,uCAAkB","names":["FormControl","FormGroup","Validators","i0","RegComponent","constructor","authService","form","login","required","email","password","minLength","ngOnInit","onSubmit","event","preventDefault","value","register","subscribe","complete","isSuccessful","isSignUpFailed","error","err","errorMessage","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\loan-offer-main\\client\\src\\app\\pages\\registration\\reg.component.ts","D:\\loan-offer-main\\client\\src\\app\\pages\\registration\\reg.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './reg.component.html',\n  styleUrls: ['./reg.component.css'],\n})\nexport class RegComponent implements OnInit {\n  form: FormGroup;\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) {\n    this.form = new FormGroup({\n      login: new FormControl('', [Validators.required, Validators.email]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6),\n      ]),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n\n    const { login, email, password } = this.form.value;\n\n    this.authService.register({ login, email, password }).subscribe({\n      complete: () => {\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      error: (err) => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      },\n    });\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"profile-img-card\" />\n    <form name=\"form\" (ngSubmit)=\"onSubmit($event)\" [formGroup]=\"form\" novalidate autocomplete=\"off\">\n      <div class=\"form-group\">\n        <label for=\"login\">Login</label>\n        <input type=\"text\" class=\"form-control\" name=\"login\" formControlName=\"login\" required minlength=\"5\"\n          maxlength=\"20\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" class=\"form-control\" name=\"email\" formControlName=\"email\" required email />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" formControlName=\"passwrod\" required minlength=\"6\" />\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Register</button>\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Successfully registered!\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}