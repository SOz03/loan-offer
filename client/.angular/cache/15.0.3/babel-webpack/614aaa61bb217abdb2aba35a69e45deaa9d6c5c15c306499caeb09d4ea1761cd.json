{"ast":null,"code":"import _asyncToGenerator from \"D:/loan-offer-main/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  get isAuthenticated() {\n    return this.authService.isLoggedIn;\n  }\n  logout() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.authService.logout().then(() => {\n        _this.router.navigate(['login']);\n      });\n    })();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EACvBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvE,IAAIC,eAAe;IACjB,OAAO,IAAI,CAACF,WAAW,CAACG,UAAU;EACpC;EAEMC,MAAM;IAAA;IAAA;MACV,MAAM,KAAI,CAACJ,WAAW,CAACI,MAAM,EAAE,CAACC,IAAI,CAAC,MAAK;QACxC,KAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACjC,CAAC,CAAC;IAAC;EACL;CACD;AAZYR,YAAY,eALxBD,SAAS,CAAC;EACTU,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWX,YAAY,CAYxB;SAZYA,YAAY","names":["Component","AppComponent","constructor","authService","router","isAuthenticated","isLoggedIn","logout","then","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\loan-offer-main\\client\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from './service/auth';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  get isAuthenticated(): boolean {\n    return this.authService.isLoggedIn;\n  }\n\n  async logout() {\n    await this.authService.logout().then(() => {\n      this.router.navigate(['login']);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}