{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_form_3_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Login is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 14);\n  }\n}\nfunction LoginComponent_form_3_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Login failed: \", ctx_r7.errorMessage, \" \");\n  }\n}\nfunction LoginComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 5, 6);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const _r2 = i0.ɵɵreference(1);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(_r2.form.valid && ctx_r8.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 7)(3, \"label\");\n    i0.ɵɵtext(4, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"--> \");\n    i0.ɵɵelementStart(6, \"input\", 8, 9);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.form.login = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, LoginComponent_form_3_div_8_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\");\n    i0.ɵɵtext(11, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"--> \");\n    i0.ɵɵelementStart(13, \"input\", 11, 12);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.form.password = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, LoginComponent_form_3_div_15_Template, 1, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 7)(17, \"button\", 13);\n    i0.ɵɵtext(18, \" Login \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 7);\n    i0.ɵɵtemplate(20, LoginComponent_form_3_div_20_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(1);\n    const _r3 = i0.ɵɵreference(7);\n    const _r5 = i0.ɵɵreference(14);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.login);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors && _r2.submitted);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors && _r2.submitted);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", _r2.submitted && ctx_r0.isLoginFailed);\n  }\n}\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Logged in as \", ctx_r1.role, \". \");\n  }\n}\nexport class LoginComponent {\n  constructor(authService, storageService, router) {\n    this.authService = authService;\n    this.storageService = storageService;\n    this.router = router;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n    this.form = new FormGroup({\n      login: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    const {\n      login,\n      password\n    } = this.form.value;\n    this.authService.login({\n      login,\n      password\n    }).subscribe({\n      next: data => {\n        this.storageService.saveToken(data.token);\n        this.storageService.saveUser(data);\n      },\n      complete: () => {\n        this.isLoginFailed = false;\n        this.router.navigate(['home']);\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"col-md-12\"], [1, \"card\", \"card-container\"], [\"id\", \"profile-img\", \"src\", \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\", 1, \"profile-img-card\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"login\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"login\", \"ngModel\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"btn\", \"btn-primary\", \"btn-block\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵtemplate(3, LoginComponent_form_3_Template, 21, 5, \"form\", 3);\n      i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.authenticate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.authenticate);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.NgModel, i4.NgForm],\n  styles: [\".col-md-12[_ngcontent-%COMP%] {\\n  align-items: center;\\n  justify-content: center;\\n  display: flex;\\n}\\n\\n.card-container[_ngcontent-%COMP%] {\\n  padding: 30px 30px 10px 30px;\\n  margin-top: 20px;\\n  width: 350px;\\n}\\n\\n.profile-img-card[_ngcontent-%COMP%] {\\n  width: 198px;\\n  align-self: center;\\n  margin-bottom: 20px;\\n}\\n/*# sourceURL=webpack://./src/app/pages/login/login.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsYUFBYTtBQUNmOztBQUVBO0VBQ0UsNEJBQTRCO0VBQzVCLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb2wtbWQtMTIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmNhcmQtY29udGFpbmVyIHtcbiAgcGFkZGluZzogMzBweCAzMHB4IDEwcHggMzBweDtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgd2lkdGg6IDM1MHB4O1xufVxuXG4ucHJvZmlsZS1pbWctY2FyZCB7XG4gIHdpZHRoOiAxOThweDtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","ctx_r8","LoginComponent","constructor","authService","storageService","router","form","login","required","email","password","ngOnInit","onSubmit","value","subscribe","next","data","saveToken","token","saveUser","complete","isLoginFailed","navigate","error","err","errorMessage","message","reloadPage","window","location","reload","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\loan-offer-main\\client\\src\\app\\pages\\login\\login.component.ts","D:\\loan-offer-main\\client\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {\n  AuthService,\n  AuthServiceTypes,\n  StorageService,\n} from 'src/app/services';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  isLoginFailed = false;\n  errorMessage = '';\n\n  constructor(\n    private authService: AuthService,\n    private storageService: StorageService,\n    private router: Router\n  ) {\n    this.form = new FormGroup({\n      login: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    const { login, password } = this.form.value;\n\n    this.authService.login({ login, password }).subscribe({\n      next: (data: { token: string }) => {\n        this.storageService.saveToken(data.token);\n        this.storageService.saveUser(data);\n      },\n      complete: () => {\n        this.isLoginFailed = false;\n        this.router.navigate(['home']);\n      },\n      error: (err: { error: { message: string } }) => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      },\n    });\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"profile-img-card\" />\n    <form\n      *ngIf=\"!authenticate\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n<!--        <label for=\"login\">Login</label>-->\n        <label>Login</label>-->\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"login\"\n          [(ngModel)]=\"form.login\"\n          required\n          #login=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"login.errors && f.submitted\"\n        >\n          Login is required\n        </div>\n      </div>\n      <div class=\"form-group\">\n<!--        <label for=\"password\">Password</label>-->\n        <label>Password</label>-->\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"password.errors && f.submitted\"\n        >\n<!--          <div *ngIf=\"password.errors.required\">Password is required</div>-->\n<!--          <div *ngIf=\"password.errors.minlength\">-->\n<!--            Password must be at least 6 characters-->\n<!--          </div>-->\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">\n          Login\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && isLoginFailed\"\n        >\n          Login failed: {{ errorMessage }}\n        </div>\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"authenticate\">\n      Logged in as {{ role }}.\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}